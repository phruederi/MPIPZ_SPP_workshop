# Read quality assessment

Prior to any analysis using a RNAseq dataset, one might want to have a look at the quality of the data coming out of the sequencer.

## 1. Fastq files

The main output file generated by an Illumina sequencing run is a FASTQ file. As FASTA-formatted files, FASTQ ones contain sequences. The main difference between these two types is that FASTQ files also include quality scores for each base of the sequences. A quality score reflects the probability that a corresponding base call is correct. Each score is encoded with a single ASCII character for brevity, ranging from `!` (lowest quality) to `~` (highest quality).

#### Example of a .fastq file

```
@J00137:166:H5LGGBBXY:5:1101:7770:1666 1:N:0:TCTCTTCA+TCGAAGTG
CCCGATTCGGGCCCTGAGGCTCAGCACTCGGTCCCCAGCCTCCAAATCCTCCTGCGGCAGCTGCTCCTCCCAGGCCGCTGGCGTTGCCGATGGAGATTTTGCCAGCGAGCTGGTTCTTGCCCACGCCGGGCTGGGTGTCTGCCCAGTCGTT
+
AAFFFJJFFFAA<FJJJJAJJJJJJ-<JAAJ7JJJFJ<FJ7JJFJFAA<7FJJJFJ-F<AFJ<AJJJJJJJJJJJJAJFJJJJJ<JJJJFFAAJJ7<-<F<FJ<JJFJ<JFJ<7-7AAFJ7-<---A<JJFJJJF7-A<AA)7AAFF))-<
```

#### How to read a .fastq file

- **Line 1** begins with a `@` character (while FASTA files begin with `>`). It is followed by a sequence identifier and an optional description. It generally contains the reference of the sequencer, information about the flowcell lane, and - if paired-end sequencing - the number (1 or 2) of the pair member.

- **Line 2** is the sequence.

- **Line 3** begins with a `+` character and may contain the same sequence identifier or a description.

- **Line 4** contains the quality values for each single base of the sequence. Therefore, it must contain as many letters as there are symbols in the sequence.

Here after are the characters describing the quality of a nucleotide, ordered from the lowest to the highest quality:

`` !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~ ``


#####Have a look at a fastq file containing RNAseq reads

The following command shows the 12 first lines of a FASTQ files, i.e. the 3 first sequences it contains.

``head -n 12 reads.fastq``

Can you tell which part(s) of the sequences usually have the worst quality ?


## 2. Assessing the global quality of a RNAseq dataset

In order to assess the global quality of a FASTQ file, one can use dedicated tools that will give statistics on the reads it contains.

#### Running FASTQC

FastQC is a reference tool for the quality check of short sequencing reads, such as the ones generated by an Illumina sequencer. It simply takes a FASTQ file as an input. We can run the programme by simply executing the following command in a terminal:

``` fastqc ```

This command should launch a graphical interface where users can manually open the FASTQ file they are interested in. 

```fastqc reads.fastq```

It is also possible to run the programme with the next command line. This will create in the input directory, a FASTQC report that can be opened in a web browser.

#### How to read a FASTQC report ?

A lot of information is retrieved by FastQC. We will here focus on the most important data.

A FastQC report is composed of 11 sections. Each section has a status: Success, Warning or Failed.
- **Basic statistics:** shows read properties. The most important is probably the sequence lengths (the shortest and the longest are shown). Some people might want to delete very short sequences so they do not introduce noise during the mapping. 

- **Per-base sequence quality:** The boxplot shows an overview of the range of quality values across all bases at each position in the FASTQ file. The blue line on top shows the mean quality value. The different colours in the background allow to easily judge on the base call quality: very good calls are in the green part, reasonable ones are in the orange part and poor quality ones are in the red section. The quality of calls generally degrades as the run progresses. It is therefore common to see a drop in quality scores towards the end of a read.
    - Warning: issued if the lower quartile for any base is less than 10
    - Failure: issued if the lower quartile for any base is less than 5 or if the median for any base is less than 20
    
- **Per-sequence quality scores:** allows to see if a subset of reads have universally low quality values, because they were poorly imaged. This is often the case but should only concern a small percentage of reads.
    - Warning: raised if the most frequently observed mean quality is below 27 (=0.2% error rate)
    - Failure: raised if the most frequently observed mean quality is below 20 (=1% error rate)
    
- **Per-base sequence content:** shows the proportion of A, T, C and G at each position. In a random library, there would be little or no difference between the different bases. When sequencing a real sample, we expect the proportion of each base to reflect the global genome content in nucleotides.
    - Warning: issued if the difference between A and T, or G and C is greater than 10% in any position
    - Failure: returned if the difference between A and T, or G and C is greater than 20% in any position

- **Per-sequence GC content:** shows the %GC distribution over all reads. This graph is a way to reveal potential contaminants in the sequenced sample.
    - Warning: issued if the sum of the deviations from the normal distribution represents more than 15% of the reads
    - Failure: raised if the sum of the deviations from the normal distribution represents more than 30% of the reads

- **Per-base N content:** shows the proportion of undeterminded bases at each position in the reads. It should be very low.
    - Warning: if any position shows an N content of >5%
    - Failure: if any position shows an N content of >20%
    
- **Sequence length distribution:** shows the distribution of read sizes in the FASTQ file.
    - Warning: if all sequences are not the same length
    - Failure: if any of the sequences have zero length

- **Sequence duplication levels:** shows the relative number of sequences with different degrees of duplication. 
    - Warning: if non-unique sequences make up more than 20% of the total
    - Failure: if non-unique sequences make up more than 50% of the total

- **Overrepresented sequences:** lists all of the sequences which make up more than 0.1% of the total. For each overrepresented sequence the program will look for matches in a database of common contaminants and will report the best hit it finds.
    - Warning: if any sequence is found to represent more than 0.1% of the total
    - Failure: if any sequence is found to represent more than 1% of the total

- **Adapter content:** tells if the library contains a significant amount of adapters, so you can see whether you need to remove them from the sequences.
    - Warning: if any sequence is present in more than 5% of all reads
    - Failure: if any sequence is present in more than 10% of all reads


For more information: use the "Help contents" documentation in the FASTQC graphical interface, or visit https://dnacore.missouri.edu/PDF/FastQC_Manual.pdf

## 3. Read trimming

As previously mentioned and as shown by our FastQC report, the quality of the base calls drops at the two ends of Illumina reads. Prior to a RNAseq analysis, it is therefore common to trim the reads, to remove these low-quality ends. We will use **Trimmomatic** for that.

Here are the tasks that can be performed with Trimmomatic, on either single-end or paired-end reads:
 - ILLUMINACLIP: Cut adapter and other illumina-specific sequences from the read.
 - SLIDINGWINDOW: Perform a sliding window trimming, cutting once the average quality within the window falls below a threshold.
 - LEADING: Cut bases off the start of a read, if below a threshold quality
 - TRAILING: Cut bases off the end of a read, if below a threshold quality
 - CROP: Cut the read to a specified length
 - HEADCROP: Cut the specified number of bases from the start of the read
 - MINLEN: Drop the read if it is below a specified length


Let's run Trimmomatic on our FASTQ files, using the following command line

```  trimmomatic SE -trimlog log.txt reads.fastq reads_trimmed.fastq LEADING:20 TRAILING:20 AVGQUAL:20 HEADCROP:10 MINLEN:100```

You can modify the parameters according to what you have seen in your FastQC report.

Now let's check if Trimmomatic improved the quality of our reads:

``` fastqc reads_trimmed.fastq ```
